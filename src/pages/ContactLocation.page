<apex:page showHeader="False" sidebar="False" standardController="Contact" extensions="ContactLocationController" tabStyle="Contact">
    <style>
        .activeTab {background-color: #236FBD; color:white; background-image:none}
        .inactiveTab { background-color: lightgrey; color:black; background-image:none}
        div #map_canvas { height: 400px; }
        #map {
         height: 100%;
         width: 100%;
         margin: 0;
         padding: 0;
        }
        #search {
         display: block;
         position: absolute;
         z-index: 2;
         top: 20px;
         left: 74px;
      }
    </style> 
     
    <link rel="stylesheet" href="https://js.arcgis.com/3.14/esri/css/esri.css" />
    <script type="text/javascript" src="https://js.arcgis.com/3.14/"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&key=AIzaSyB4OXvx8iE-R0fC2gMdUfLCzERvV4wbImk"></script>
    <apex:pageMessages />
    <apex:tabPanel title="Contact's Location" switchType="client" selectedTab="ArcGIS" id="mapPanel" tabClass="activeTab" inactiveTabClass="inactiveTab" headerSpacing="1" height="200px" lang="en-US">
      
        <!-- ArcGIS Map  
        <apex:tab label="ArcGIS Map" name="ArcGIS" id="arcGIS">
            <apex:form id="arcMapForm">
                <apex:pageBlock id="searchBlockARC" rendered="{!latitude == null}">
                    <apex:inputText value="{!searchContactLocation}"/>
                    <apex:commandButton action="{!arcGISGeocode}" value="Locate" rendered="{!gmapReslength==0}" />
                </apex:pageBlock>
                <apex:pageBlock id="mapBlockArc">    
                    <apex:pageBlockSection columns="1" id="mapSectionArc">
                        <div id="mapArc" />
                    </apex:pageBlockSection>
                </apex:pageBlock>    
            </apex:form>        
        </apex:tab> -->
        
        <!-- Google Map Section  --> 
        <apex:tab label="Google Map" name="GMap" id="gMap">
            <apex:form id="gmapForm">
                <apex:pageBlock id="searchBlock" rendered="{!latitude == null}">
                    <apex:inputText value="{!searchContactLocation}"/>
                    <apex:commandButton action="{!gMapGeocode}" value="Locate" rendered="{!gmapReslength==0}" />
                    <apex:commandButton action="{!updateGeocode}" value="Confirm" rendered="{!gmapReslength>0}" />
                    <apex:outputPanel layout="block" style="max-height:50px; overflow:scroll;overflow-x: hidden;" id="main" rendered="{!gmapReslength>0}">                   
                        <apex:dataTable value="{!gmapRes}" var="gmapResponse" id="theTable" rowClasses="odd,even" styleClass="tableClass" align="center" columns="2" columnsWidth="100px, 500px">
                            <apex:facet name="header">Select the correct Address</apex:facet>
                            <apex:column title="Select" width="10%">
                                <apex:inputCheckbox value="{!gmapResponse.selected}" />
                            </apex:column>
                            <apex:column title="Address" width="90%">
                                <apex:outputText value="{!gmapResponse.formattedAddress}" />
                            </apex:column>
                        </apex:dataTable>
                    </apex:outputPanel>    
                </apex:pageBlock> 
                
                <apex:pageBlock id="mapBlock">    
                    <apex:pageBlockSection columns="1" id="mapSection">
                        <div id="map_canvas" />
                    </apex:pageBlockSection>
                    <pre id="log"></pre>
                </apex:pageBlock>     
           </apex:form>                      
        </apex:tab>
    </apex:tabPanel>
    
    <script type="text/javascript">
        
        var contacts = {!contactsJSON};    // Array of Case data, some of them might have lat/long info, some we'll have to geocode client side
        var coords = [];                   // Just the latitude/longitude for each Case
        var requestCounter = 0;
        var markers = [];                  // Red things we pin to the map.
        var balloon = new google.maps.InfoWindow(); // Comic-like baloon that floats over markers.
        var map;
        var point;
        
        function geocodeGMap() {
            for(var i = 0; i < contacts.length; i++) {
                if(contacts[i].MailingLocation__Latitude__s != null && contacts[i].MailingLocation__Longitude__s != null) {
                    coords.push(new google.maps.LatLng(contacts[i].MailingLocation__Latitude__s, contacts[i].MailingLocation__Longitude__s));
                } 
                else {
                    ++requestCounter;
                    var address = contacts[i].MailingAddress;
                    var geocoder = new google.maps.Geocoder();
                    if (geocoder) {
                        geocoder.geocode({'address':address}, function (results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                coords.push(results[0].geometry.location);
                            } else {
                                var pTag = document.createElement("p");
                                pTag.innerHTML = status;
                                document.getElementById('log').appendChild(pTag);
                            }
                            if(--requestCounter == 0) {
                                drawMap();
                            }
                        });
                    }
                }
            }
            // It could be the case that all was geocoded on server side (or simply retrieved from database).
            // So if we're lucky - just proceed to drawing the map.
            drawMap();
        }
    
        function drawMap(){
        
            if(coords[0] != undefined)    {
                var mapOptions = {
                    center: coords[0],
                    zoom: 17,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
            }    
            
            else {
                var mapOptions = {
                  center: { lat: 39.9529979, lng: -75.1624782},
                  zoom: 12,
                  mapTypeId: google.maps.MapTypeId.ROADMAP
                };
            }
            
            var map = new google.maps.Map(document.getElementById("map_canvas"),  mapOptions);
            
            for(var i = 0; i < coords.length; ++i){
                var marker = new google.maps.Marker({map: map, position: coords[i], title:contacts[i].MailingStreet, zIndex:i});
    
                google.maps.event.addListener(marker, 'click', function() {
                    var index = this.zIndex;
                    balloon.content = '<b>'+contacts[index].Name + '</b><br/>' ;
                    balloon.open(map,this);
                });
                markers.push(marker);
            }
        }
                
        geocodeGMap();
        /*       
        require([
            "esri/map",
            "esri/graphic",
            "esri/dijit/Search",
            "esri/toolbars/draw",
            "dojo/domReady!",
            "esri/symbols/SimpleMarkerSymbol", 
            "esri/SpatialReference",
            "esri/geometry/Point",
            "esri/Color",
            "dojo/dom",
            "dojo/on",
            "dojo/domReady!"
            ], function (Map, Search, Graphic, Color, Draw) {
                 var symbol = new esri.symbol.SimpleMarkerSymbol();
                 symbol.setStyle(new esri.symbol.SimpleMarkerSymbol.STYLE_SQUARE);
                 symbol.setColor(new dojo.Color("#B34066"));
                 
                        
                 if({!latitude} != undefined && {!latitude} != null && {!latitude} != ""){
                     map = new Map("mapArc", {
                        basemap: "gray",
                        center: [{!longitude}, {!latitude}], // lon, lat
                        zoom: 16
                     });
                     point = new esri.geometry.Point("{!latitude}","{!longitude}"); 
                     loc = new esri.geometry.Point("{!longitude}", "{!latitude}");
                     map.graphics.add(new Graphic(point, symbol));
                 }    
                 else{
                     map = new Map("mapArc", {
                        basemap: "gray",
                        center: [-75.1624782, 39.9529979], 
                        zoom: 16
                     });
                 }                

            });*/
            
    </script> 
</apex:page>