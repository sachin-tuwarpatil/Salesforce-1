<apex:page showHeader="False" sidebar="False" standardController="Contact" extensions="ContactLocationController" tabStyle="Contact">
    <style>
        .activeTab {background-color: #236FBD; color:white; background-image:none}
        .inactiveTab { background-color: lightgrey; color:black; background-image:none}
        div #map_canvas { height: 400px; }
        #map {
         height: 100%;
         width: 100%;
         margin: 0;
         padding: 0;
        }
        #search {
         display: block;
         position: absolute;
         z-index: 2;
         top: 20px;
         left: 74px;
      }
    </style>
     
    <link rel="stylesheet" href="https://js.arcgis.com/3.14/esri/css/esri.css" />
    <script type="text/javascript" src="https://js.arcgis.com/3.14/"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&key=AIzaSyB4OXvx8iE-R0fC2gMdUfLCzERvV4wbImk"></script>
    <apex:pageMessages />
    <apex:tabPanel title="Contact's Location" switchType="client" selectedTab="ArcGIS" id="mapPanel" tabClass="activeTab" inactiveTabClass="inactiveTab" headerSpacing="1" height="200px" lang="en-US">
      
        <!-- ArcGIS Map  -->
        <apex:tab label="ArcGIS Map" name="ArcGIS" id="arcGIS">
            <apex:form id="arcMapForm">
                <apex:pageBlock id="searchBlockARC" rendered="{!latitude == null}">
                    <apex:inputText value="{!searchContactLocation}"/>
                    <apex:commandButton action="{!arcGISGeocode}" value="Locate" rendered="{!gmapReslength==0}" />
                </apex:pageBlock>
                <apex:pageBlock id="mapBlockArc">    
                    <apex:pageBlockSection columns="1" id="mapSectionArc">
                        <div id="map" />
                    </apex:pageBlockSection>
                </apex:pageBlock>    
            </apex:form>        
        </apex:tab>
    </apex:tabPanel>
    
    <script type="text/javascript">
        
        var contacts = {!contactsJSON};    // Array of Case data, some of them might have lat/long info, some we'll have to geocode client side
        var coords = [];                   // Just the latitude/longitude for each Case
        
        require([
            "esri/map",
            "esri/graphic",
            "dojo/domReady!",
            "esri/symbols/SimpleMarkerSymbol", 
            "esri/SpatialReference",
            "esri/geometry/Point",
            "esri/Color"
            ], function (Map, Graphic, Color, Draw) {
                 
                 var symbol = new esri.symbol.SimpleMarkerSymbol();
                 symbol.setStyle(esri.symbol.SimpleMarkerSymbol.STYLE_SQUARE);
                 symbol.setColor(new dojo.Color("#B34066"));
                        
                 if({!latitude} != undefined && {!latitude} != null && {!latitude} != ""){
                     map = new Map("map", {
                        basemap: "gray",
                        center: [{!longitude}, {!latitude}], // lon, lat
                        zoom: 16
                     });
                     point = new esri.geometry.Point("{!latitude}","{!longitude}"); 
                     loc = new esri.geometry.Point("{!longitude}", "{!latitude}");
                    // Graphic gG = new Graphic(point, symbol);
                   //  console.log(gG);
                     map.graphics.add(new Graphic(point, symbol));
                 }    
                 else{
                     map = new Map("map", {
                        basemap: "gray",
                        center: [-75.1624782, 39.9529979], 
                        zoom: 16
                     });
                 }                

            });
            
    </script> 
</apex:page>